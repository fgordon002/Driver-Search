geom_point(aes(color = sex, shape = sex)) +
labs(title = "Scatterplot of Body Mass vs Flipper Length by Sex",
subtitle = "by Finley Gordon",
x = "Flipper Length (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("skyblue1", "salmon")) +
scale_shape_manual(values = c(17,18)) +
theme_bw()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = sex, shape = sex)) +
labs(title = "Scatterplot of Body Mass vs Flipper Length by Sex",
subtitle = "by Finley Gordon",
x = "Flipper Length (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("skyblue1", "salmon")) +
scale_shape_manual(values = c(17,18)) +
theme_light()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = sex, shape = sex)) +
labs(title = "Scatterplot of Body Mass vs Flipper Length by Sex",
subtitle = "by Finley Gordon",
x = "Flipper Length (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("skyblue1", "salmon")) +
scale_shape_manual(values = c(17,18)) +
theme_minimal()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = sex, shape = sex)) +
labs(title = "Scatterplot of Body Mass vs Flipper Length by Sex",
subtitle = "by Finley Gordon",
x = "Flipper Length (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("skyblue1", "salmon")) +
scale_shape_manual(values = c(17,18)) +
theme_gray()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = sex, shape = sex)) +
labs(title = "Scatterplot of Body Mass vs Flipper Length by Sex",
subtitle = "by Finley Gordon",
x = "Flipper Length (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("skyblue1", "salmon")) +
scale_shape_manual(values = c(17,18)) +
theme_light()
plot(penguins)
plot( ~ body_mass_g + bill_length_mm + flipper_length_mm + bill_depth_mm, data = penguins)
plot( ~ body_mass_g + bill_length_mm + flipper_length_mm + bill_depth_mm,
data = penguins,
col = species)
plot( ~ body_mass_g + bill_length_mm + flipper_length_mm + bill_depth_mm,
data = penguins,
col = c("darkblue", "orange", "gray40")[species])
lm_depth <- lm(bill_depth_mm ~ species + bill_length_mm, data = penguins)
summary(lm_depth)
ggplot(data = penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Bill Depth vs Bill Length by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Length (in mm)",
y = "Bill Depth (in mm)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw()
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Bill Depth vs Bill Length by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Length (in mm)",
y = "Bill Depth (in mm)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = 8.63218, slope = 0.20044, color = "darkblue") +
geom_abline(intercept = 10.56526, slope = 0.20044, color = "orange", lwd = 1.2) +
geom_abline(intercept = 5.46194, slope = 0.20044, color = "grey40", lty = 2)
lm_mass <- lm(body_mass_g ~ species + bill_depth_mm, data = penguins)
summary(lm_mass)
-922.734 - 8.111
-992.734 + 2237.767
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue") +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange", lwd = 1.2) +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40", lty = 2)
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue") +
#geom_abline(intercept = -930.845, slope = 256.551, color = "orange", lwd = 1.2) +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40", lty = 2)
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue") +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange", lty = 3) +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40", lwd = 1.2)
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue") +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange", lty = 2) +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40", lwd = 1.2)
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange", lty = 2) +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40", lwd = 1.2)
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange", lty = 2) +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, ltd = 1.2) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, ltd = 2) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, lwd = 2) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, lwd = 1.2) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Stats 401 Instructional Team",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, lwd = 1.1) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
lm_mass <- lm(body_mass_g ~ species + bill_depth_mm, data = penguins)
summary(lm_mass)
-922.734
-922.734 - 8.111
-992.734 + 2237.767
pairs(emmeans(lm_mass, ~ species), adjust = "none")
iris_sample <- read.csv("iris_dataset.csv")
iris$Species <- as.factor(iris$Species)
levels(iris$Species)
iris_sample$Species <- as.factor(iris_sample$Species)
levels(iris_sample$Species)
plot( ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,
data = iris_sample,
col = Species)
iris_sample$Species <- as.factor(iris_sample$Species)
levels(iris_sample$Species)
lm_petal <- lm(Petal.Length ~ Petal.Width + Species, data = iris_sample)
summary(lm_petal)
lm_sepal <- lm(Sepal.Length ~ Sepal.Width + Species, data = iris_sample)
summary(lm_sepal)
pairs(emmeans(lm_sepal, ~ Species), adjust = "none")
ggplot(data = iris_sample, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Species, shape = Species)) +
labs(title = "Scatterplot of Sepal Length vs Sepal Width by Species",
subtitle = "by Finley Gordon",
x = "Sepal Width (in cm)",
y = "Sepal Length (in cm)") +
scale_color_manual(values = c("darkblue", "orange")) +
scale_shape_manual(values = c(15, 16)) +
theme_bw() +
#geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, lwd = 1.1) +
#geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
ggplot(data = iris_sample, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Species, shape = Species)) +
labs(title = "Scatterplot of Sepal Length vs Sepal Width by Species",
subtitle = "by Finley Gordon",
x = "Sepal Width (in cm)",
y = "Sepal Length (in cm)") +
scale_color_manual(values = c("darkblue", "orange")) +
scale_shape_manual(values = c(15, 16)) +
theme_bw()
#geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, lwd = 1.1) +
#geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
ggplot(data = iris_sample, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Species, shape = Species)) +
labs(title = "Scatterplot of Sepal Length vs Sepal Width by Species",
subtitle = "by Finley Gordon",
x = "Sepal Width (in cm)",
y = "Sepal Length (in cm)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw()
#geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, lwd = 1.1) +
#geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
#geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
lm_sepal <- lm(Sepal.Length ~ Sepal.Width + Species, data = iris_sample)
summary(lm_sepal)
2.2514 + 1.4587
2.2514 + 1.9468
ggplot(data = iris_sample, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Species, shape = Species)) +
labs(title = "Scatterplot of Sepal Length vs Sepal Width by Species",
subtitle = "by Finley Gordon",
x = "Sepal Width (in cm)",
y = "Sepal Length (in cm)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw()
geom_abline(intercept = 2.2514, slope = 0.8036, color = "darkblue", lty = 4, lwd = 1.1) +
geom_abline(intercept = 3.7101, slope = 0.8036, color = "orange") +
geom_abline(intercept = 4.1982, slope = 0.8036, color = "grey40")
ggplot(data = iris_sample, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Species, shape = Species)) +
labs(title = "Scatterplot of Sepal Length vs Sepal Width by Species",
subtitle = "by Finley Gordon",
x = "Sepal Width (in cm)",
y = "Sepal Length (in cm)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = 2.2514, slope = 0.8036, color = "darkblue", lty = 4, lwd = 1.1) +
geom_abline(intercept = 3.7101, slope = 0.8036, color = "orange") +
geom_abline(intercept = 4.1982, slope = 0.8036, color = "grey40")
ggplot(data = penguins, aes(x = bill_depth_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
labs(title = "Scatterplot of Body Mass vs Bill Depth by Species",
subtitle = "by Finley Gordon",
x = "Bill Depth (in mm)",
y = "Body Mass (in g)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = -922.734, slope = 256.551, color = "darkblue", lty = 4, lwd = 1.1) +
geom_abline(intercept = -930.845, slope = 256.551, color = "orange") +
geom_abline(intercept = 1245.033, slope = 256.551, color = "grey40")
ggplot(data = iris_sample, aes(x = Sepal.Width, y = Sepal.Length)) +
geom_point(aes(color = Species, shape = Species)) +
labs(title = "Scatterplot of Sepal Length vs Sepal Width by Species",
subtitle = "by Finley Gordon",
x = "Sepal Width (in cm)",
y = "Sepal Length (in cm)") +
scale_color_manual(values = c("darkblue", "orange", "grey40")) +
scale_shape_manual(values = c(15, 16, 17)) +
theme_bw() +
geom_abline(intercept = 2.2514, slope = 0.8036, color = "darkblue", lty = 4, lwd = 1.1) +
geom_abline(intercept = 3.7101, slope = 0.8036, color = "orange", lty = 2) +
geom_abline(intercept = 4.1982, slope = 0.8036, color = "grey40")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Volumes/lsa-mcdb-jclowney/lab/LabMemberFolders/Finley/Singlecell_KC_analysis")
library(ggplot2)
library(ggbeeswarm)
library(dplyr)
library(car)
library(Seurat)
library(tidyverse)
library(ggpubr)
library(gplots)
library(RColorBrewer)
avgs_36h <- read.csv('KC_36htranscripts_NORMALIZED.csv', row.names = 1)
avgs_36h <- read.csv('KC_36htranscripts_AVGS.csv', row.names = 1)
avgs_48h <- read.csv("KC_48htranscripts_AVGS.csv")
Total_olfac_KCs_36 <-
avgs_36h %>%
mutate(KC_36h = (primem36h + primeap36h + gammaM36h + abOlfac36h)/4) %>%
select(KC_36h)
Total_olfac_KCs_48 <-
avgs_48h %>%
mutate(KC_48h = (primem48h + primeap48h + gammaM48h + abOlfac48h)/4) %>%
select(KC_48h)
Total_olfac_KCs <- cbind(Total_olfac_KCs_36, Total_olfac_KCs_48)
Total_olfac_KCs_log2 <- log2(Total_olfac_KCs + 1)
Total_olfac_KCs_log2_cam <- Total_olfac_KCs_log2[c('dpr1', 'dpr2', 'dpr3', 'dpr4', 'dpr5', 'dpr6', 'dpr7',
'dpr8', 'dpr9', 'dpr10', 'dpr11', 'dpr12', 'dpr13', 'dpr14',
'dpr15', 'dpr16', 'dpr17', 'dpr18', 'dpr19', 'dpr20',
'DIP-alpha', 'DIP-beta', 'DIP-gamma', 'DIP-delta', 'DIP-epsilon',
'DIP-zeta', 'DIP-eta', 'DIP-theta', 'DIP-iota'),]
heatmap.2(t(Total_olfac_KCs_log2_cam),
trace = 'none',
scale = 'none',
dendrogram = 'none', Rowv = FALSE, Colv = FALSE, symm = FALSE,
symbreaks = FALSE,
density.info = 'density',
breaks = seq(0,4, length.out = 12),
cexRow = 0.5, cexCol = 0.7,
offsetRow = 0.00, offsetCol = 0.00,
denscol = 'black',
srtCol = 90,
col = c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",  "#F7F7F7", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"),
xlab = 'KC subtype',
ylab = 'Gene')
library(tidyverse)
library(corrplot)
library(ggcorrplot)
library(readr)
BiocManager::install(version='devel')
BiocManager::install(version='devel')
#automatic install of packages if they are not installed already
list.of.packages <- c(
"foreach",
"doParallel",
"ranger",
"palmerpenguins",
"tidyverse",
"kableExtra"
)
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages) > 0){
install.packages(new.packages, dep=TRUE)
}
#loading packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(
library(
package.i,
character.only = TRUE
)
)
}
parallel::detectCores()
matrix(x = c(4,11,8,7,5),
y = (70,80,40,57,43))
baked_goods <- tibble(
cost = c(4, 11, 8, 7, 5),
sold = c(70, 80, 40, 57, 43)
)
library(tidyverse)
baked_goods <- tibble(
cost = c(4, 11, 8, 7, 5),
sold = c(70, 80, 40, 57, 43)
)
lm(sold ~ cost, data = baked_goods)
summary(lm(sold ~ cost, data = baked_goods))
model <- lm(sold ~ cost, data = baked_goods)
predictions(predict(model))
predictions<- predict(model)
mse <- mean((data$sold - predictions)^2)
mse <- mean((baked_goods$sold - predictions)^2)
library(tidyverse)
baked_goods <- tibble(
cost = c(4, 11, 8, 7, 5),
sold = c(70, 80, 40, 57, 43),
time = c(30,44,38,36,32)
)
model1 <- lm(sold ~ cost, data = baked_goods)
model2 <- lm(sold ~ time, data = baked_goods)
predictions1 <- predict(model1)
prediction2 <- preduct(model2)
prediction2 <- predict(model2)
mse1 <- mean((baked_goods$sold - predictions1)^2)
mse2 <- mean((baked_goods$time - predictions2)^2)
baked_goods <- tibble(
cost = c(4, 11, 8, 7, 5),
sold = c(70, 80, 40, 57, 43),
time = c(30,44,38,36,32)
)
model1 <- lm(sold ~ cost, data = baked_goods)
model2 <- lm(sold ~ time, data = baked_goods)
predictions1 <- predict(model1)
predictions2 <- predict(model2)
mse1 <- mean((baked_goods$sold - predictions1)^2)
mse2 <- mean((baked_goods$time - predictions2)^2)
baked_goods <- tibble(
cost = c(4, 11, 8, 7, 5),
sold = c(70, 80, 40, 57, 43),
time = c(30,44,38,36,32)
)
model1 <- lm(sold ~ cost, data = baked_goods)
model2 <- lm(sold ~ time, data = baked_goods)
predictions1 <- predict(model1)
predictions2 <- predict(model2)
mse1 <- mean((baked_goods$sold - predictions1)^2)
mse2 <- mean((baked_goods$sold - predictions2)^2)
model2
setwd("/Users/finleygordon/Desktop/Lab/Driver_search/Data")
library(tidyverse)
drivers_genes = read_csv("drivers.genes.csv")
View(drivers_genes)
drivers_genes <- read_csv("drivers.genes.csv", row.names = 1)
drivers_genes <- read_csv("drivers.genes.csv", rownames = 1)
drivers_genes <- read_csv("drivers.genes.csv", row.names = 1)
drivers_genes <- read.csv("drivers.genes.csv", row.names = 1)
View(drivers_genes)
drivers_locations <- read.table("Janelia_and_VDRC_2014.bed")
View(drivers_locations)
View(drivers_genes)
View(drivers_locations)
left_join(drivers_genes, drivers_locations, join_by(driver == V4))
left_join(drivers_genes, drivers_locations, join_by(driver == V4)) %>% view()
intersect(drivers_genes$driver, drivers_locations$V4)
setdiff(drivers_genes$driver, drivers_locations$V4)
View(drivers_genes)
View(drivers_locations)
drivers_locations$V4 <- sub("^GM", "", drivers_locations$V4)
View(drivers_locations)
intersect(drivers_genes$driver, drivers_locations$V4)
View(drivers_genes)
drivers_genes$driver %>%
str_sub("VT")
drivers_genes$driver %>%
str_extract("VT")
drivers_genes$driver %>%
str_detect("VT")
drivers_genes$driver %>%
str_extract("VT")
drivers_genes$driver %>%
str_extract_all("VT")
drivers_genes$driver %>%
str_subset("VT")
drivers_genes$driver %>%
str_subset("VT00811")
driver_locations$V4 <- sub("^(VT)", "\\10", drivers_locations$V4)
drivers_locations$V4 <- sub("^(VT)", "\\10", drivers_locations$V4)
View(drivers_locations)
intersect(drivers_genes$driver, drivers_locations$V4)
left_join(drivers_genes, drivers_locations, join_by(driver == V4)) %>% view()
merged <- left_join(drivers_genes, drivers_locations, join_by(driver == V4))
View(drivers_locations)
colnames(drivers_locations) <- c("chromosome", "start", "stop", "driver_line", "X5", "X6")
drivers_genes <- read.csv("drivers.genes.csv", row.names = 1)
drivers_locations <- read.table("Janelia_and_VDRC_2014.bed")
colnames(drivers_locations) <- c("chromosome", "start", "stop", "driver_line", "X5", "X6")
View(drivers_locations)
merged <- left_join(drivers_locations, drivers_genes, join_by(driver_line == driver))
View(merged)
drivers_locations$driver_line <- sub("^GM", "", drivers_locations$driver_line)
drivers_locations$driver_line <- sub("^(VT)", "\\10", drivers_locations$driver_line)
merged <- left_join(drivers_locations, drivers_genes, join_by(driver_line == driver))
View(merged)
write.csv(merged, "driver_meta.csv")
